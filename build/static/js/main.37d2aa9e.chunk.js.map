{"version":3,"sources":["api.js","hooks/useScoreCard.js","containers/Header.js","hooks/useStyles.js","containers/Body.js","containers/App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","REGULAR_MESSAGE_COLOR","ScoreCardContext","createContext","messages","addCardMessage","addRegularMessage","addErrorMessage","makeMessage","message","color","ScoreCardProvider","props","useState","setMessages","Provider","value","ms","map","m","useScoreCard","useContext","Wrapper","styled","section","Header","handleClear","delete","data","Typography","variant","Button","onClick","useStyles","makeStyles","input","margin","button","width","marginLeft","Row","div","StyledFormControl","FormControl","ContentPaper","Paper","Body","classes","name","setName","subject","setSubject","score","setScore","queryType","setQueryType","queryString","setQueryString","handleChange","func","event","target","handleAdd","post","card","handleQuery","get","params","type","TextField","className","placeholder","onChange","style","disabled","component","RadioGroup","row","FormControlLabel","control","Radio","label","flex","i","StyledPaper","App","elevation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","console","log"],"mappings":"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","file":"static/js/main.37d2aa9e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: `http://localhost:4000/`,\n});\n\nexport default instance;\n\n// instance.get('/hi').then((data) => console.log(data));\n","import { createContext, useContext, useState } from 'react';\n\nconst ADD_MESSAGE_COLOR = '#3d84b8';\nconst REGULAR_MESSAGE_COLOR = '#2b2e4a';\nconst ERROR_MESSAGE_COLOR = '#fb3640';\n\nconst ScoreCardContext = createContext({\n  messages: [],\n\n  addCardMessage: () => {},\n  addRegularMessage: () => {},\n  addErrorMessage: () => {},\n});\n\nconst makeMessage = (message, color) => {\n  return { message, color };\n};\n\nconst ScoreCardProvider = (props) => {\n  const [messages, setMessages] = useState([]);\n\n  const addCardMessage = (message) => {\n    setMessages([...messages, makeMessage(message, ADD_MESSAGE_COLOR)]);\n  };\n\n  const addRegularMessage = (...ms) => {\n    setMessages([\n      ...messages,\n      ...ms.map((m) => makeMessage(m, REGULAR_MESSAGE_COLOR)),\n    ]);\n  };\n\n  const addErrorMessage = (message) => {\n    setMessages([...messages, makeMessage(message, ERROR_MESSAGE_COLOR)]);\n  };\n\n  return (\n    <ScoreCardContext.Provider\n      value={{\n        messages,\n        addCardMessage,\n        addRegularMessage,\n        addErrorMessage,\n      }}\n      {...props}\n    />\n  );\n};\n\nfunction useScoreCard() {\n  return useContext(ScoreCardContext);\n}\n\nexport { ScoreCardProvider, useScoreCard };\n","import styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport axios from '../api';\nimport { useScoreCard } from '../hooks/useScoreCard';\n\nconst Wrapper = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & button {\n    margin-left: 3em;\n  }\n`;\n\nexport default function Header() {\n  const { addRegularMessage } = useScoreCard();\n\n  const handleClear = async () => {\n    const {\n      data: { message },\n    } = await axios.delete('/cards');\n    addRegularMessage(message);\n  };\n\n  return (\n    <Wrapper>\n      <Typography variant=\"h2\">ScoreCard DB</Typography>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}>\n        Clear\n      </Button>\n    </Wrapper>\n  );\n};\n\n","// resource: https://material-ui.com/styles/basics/\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  input: {\n    margin: '0 0.2em',\n  },\n  button: {\n    width: '100px',\n    marginLeft: '0.6em',\n  },\n});\n","import { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { useStyles } from '../hooks';\nimport axios from '../api';\nimport { useScoreCard } from '../hooks/useScoreCard';\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 1em;\n`;\n\nconst StyledFormControl = styled(FormControl)`\n  min-width: 120px;\n`;\n\nconst ContentPaper = styled(Paper)`\n  height: 300px;\n  padding: 2em;\n  overflow: auto;\n`;\n\nexport default function Body() {\n  const classes = useStyles();\n\n  const { messages, addCardMessage, addRegularMessage, addErrorMessage } =\n    useScoreCard();\n\n  const [name, setName] = useState('');\n  const [subject, setSubject] = useState('');\n  const [score, setScore] = useState(0);\n\n  const [queryType, setQueryType] = useState('name');\n  const [queryString, setQueryString] = useState('');\n\n  const handleChange = (func) => (event) => {\n    func(event.target.value);\n  };\n\n  const handleAdd = async () => {\n    const {\n      data: { message, card },\n    } = await axios.post('/card', {\n      name,\n      subject,\n      score,\n    });\n\n    if (!card) addErrorMessage(message);\n    else addCardMessage(message);\n  };\n\n  const handleQuery = async () => {\n    const {\n      data: { messages, message },\n    } = await axios.get('/cards', {\n      params: {\n        type: queryType,\n        queryString,\n      },\n    });\n\n    if (!messages) addErrorMessage(message);\n    else addRegularMessage(...messages);\n  };\n\n  return (\n    <Wrapper>\n      <Row>\n        {/* Could use a form & a library for handling form data here such as Formik, but I don't really see the point... */}\n        <TextField\n          className={classes.input}\n          placeholder=\"Name\"\n          value={name}\n          onChange={handleChange(setName)}\n        />\n        <TextField\n          className={classes.input}\n          placeholder=\"Subject\"\n          style={{ width: 240 }}\n          value={subject}\n          onChange={handleChange(setSubject)}\n        />\n        <TextField\n          className={classes.input}\n          placeholder=\"Score\"\n          value={score}\n          onChange={handleChange(setScore)}\n          type=\"number\"\n        />\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!name || !subject}\n          onClick={handleAdd}\n        >\n          Add\n        </Button>\n      </Row>\n      <Row>\n        <StyledFormControl>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              row\n              value={queryType}\n              onChange={handleChange(setQueryType)}\n            >\n              <FormControlLabel\n                value=\"name\"\n                control={<Radio color=\"primary\" />}\n                label=\"Name\"\n              />\n              <FormControlLabel\n                value=\"subject\"\n                control={<Radio color=\"primary\" />}\n                label=\"Subject\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </StyledFormControl>\n        <TextField\n          placeholder=\"Query string...\"\n          value={queryString}\n          onChange={handleChange(setQueryString)}\n          style={{ flex: 1 }}\n        />\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!queryString}\n          onClick={handleQuery}\n        >\n          Query\n        </Button>\n      </Row>\n      <ContentPaper variant=\"outlined\">\n        {messages.map((m, i) => (\n          <Typography variant=\"body2\" key={m + i} style={{ color: m.color }}>\n            {m.message}\n          </Typography>\n        ))}\n      </ContentPaper>\n    </Wrapper>\n  );\n};\n","import Header from './Header';\nimport Body from './Body';\nimport styled from 'styled-components';\nimport Paper from '@material-ui/core/Paper';\n\nconst Wrapper = styled.div`\n  margin: auto;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledPaper = styled(Paper)`\n  padding: 2em;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <StyledPaper elevation={3}>\n        <Header />\n        <Body />\n      </StyledPaper>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { ReactDOM } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ScoreCardProvider } from \"./hooks/useScoreCard\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <ScoreCardProvider>\n      <App />\n    </ScoreCardProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}